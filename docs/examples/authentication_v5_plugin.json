{
  "info": {
    "title": "Testing feathers swagger with dove",
    "version": "1.0.0",
    "description": "Testing feathers swagger with dove using koa"
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "authRequest": {
        "type": "object",
        "properties": {
          "strategy": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "authResult": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "authentication": {
            "type": "object",
            "properties": {
              "strategy": {
                "type": "string"
              }
            }
          },
          "payload": {
            "type": "object",
            "properties": {}
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "id": {
            "type": "number"
          }
        },
        "required": ["email", "password", "id"]
      },
      "UserData": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "UserQuery": {
        "type": "object",
        "properties": {
          "$sort": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "email": {
                "minimum": -1,
                "maximum": 1,
                "type": "integer"
              },
              "password": {
                "minimum": -1,
                "maximum": 1,
                "type": "integer"
              },
              "id": {
                "minimum": -1,
                "maximum": 1,
                "type": "integer"
              }
            }
          },
          "$select": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["email", "password", "id"]
            }
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "$gt": {
                    "type": "string"
                  },
                  "$gte": {
                    "type": "string"
                  },
                  "$lt": {
                    "type": "string"
                  },
                  "$lte": {
                    "type": "string"
                  },
                  "$ne": {
                    "type": "string"
                  },
                  "$in": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "$nin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "$gt": {
                    "type": "string"
                  },
                  "$gte": {
                    "type": "string"
                  },
                  "$lt": {
                    "type": "string"
                  },
                  "$lte": {
                    "type": "string"
                  },
                  "$ne": {
                    "type": "string"
                  },
                  "$in": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "$nin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "object",
                "properties": {
                  "$gt": {
                    "type": "number"
                  },
                  "$gte": {
                    "type": "number"
                  },
                  "$lt": {
                    "type": "number"
                  },
                  "$lte": {
                    "type": "number"
                  },
                  "$ne": {
                    "type": "number"
                  },
                  "$in": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "$nin": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "UserPatchData": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "UserPagination": {
        "title": "User pagination result",
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/UserList"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/authentication": {
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authResult"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Creates a new resource with data.",
        "summary": "",
        "tags": ["authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authRequest"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authResult"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Logout the currently logged in user",
        "summary": "",
        "tags": ["authentication"],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/authentication/{accessToken}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "accessToken",
            "description": "accessToken of the currently logged in user",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authResult"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Logout the currently logged in user",
        "summary": "",
        "tags": ["authentication"],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "description": "Number of results to return",
            "in": "query",
            "name": "$limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of results to skip",
            "in": "query",
            "name": "$skip",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Query parameters",
            "in": "query",
            "name": "filter",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/UserQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPagination"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Retrieves a list of all resources from the service.",
        "summary": "",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Creates a new resource with data.",
        "summary": "",
        "tags": ["users"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserData"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User to return",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Retrieves a single resource with the given id from the service.",
        "summary": "",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User to update",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Updates the resource identified by id using data.",
        "summary": "",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserData"
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User to update",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Updates the resource identified by id using data.",
        "summary": "",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchData"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User to remove",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "general error"
          }
        },
        "description": "Removes the resource with id.",
        "summary": "",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "openapi": "3.1.0",
  "tags": [
    {
      "name": "authentication",
      "description": "A authentication service"
    },
    {
      "name": "users",
      "description": "A users service"
    }
  ]
}
